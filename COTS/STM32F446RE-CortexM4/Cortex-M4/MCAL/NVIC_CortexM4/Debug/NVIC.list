
NVIC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000230  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003f4  080003fc  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003f4  080003f4  000103fc  2**0
                  CONTENTS
  4 .ARM          00000000  080003f4  080003f4  000103fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003f4  080003fc  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003f4  080003f4  000103f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003f8  080003f8  000103f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003fc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003fc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000103fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008a1  00000000  00000000  00010426  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001e3  00000000  00000000  00010cc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00000224  00000000  00000000  00010eaa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000090  00000000  00000000  000110d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000068  00000000  00000000  00011160  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fac  00000000  00000000  000111c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000aaf  00000000  00000000  00013174  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000084f0  00000000  00000000  00013c23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001c113  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000014c  00000000  00000000  0001c164  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080003dc 	.word	0x080003dc

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080003dc 	.word	0x080003dc

08000204 <NVICEnable>:
 * @post
 * @param  : IQR Number
 * @return : LocalErrorStatus
 */
uint8_t NVICEnable (IRQNUM_E IQR )
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
	uint8_t LocalErrorState = OK;
 800020e:	2300      	movs	r3, #0
 8000210:	73fb      	strb	r3, [r7, #15]
	if(IQR<MAX_IRQ)
 8000212:	79fb      	ldrb	r3, [r7, #7]
 8000214:	2b5f      	cmp	r3, #95	; 0x5f
 8000216:	d80c      	bhi.n	8000232 <NVICEnable+0x2e>
	{
		ATOMIC_SET_BIT(NVIC->NVIC_ISER[IQR/32],IQR%32);
 8000218:	79fb      	ldrb	r3, [r7, #7]
 800021a:	f003 031f 	and.w	r3, r3, #31
 800021e:	2201      	movs	r2, #1
 8000220:	fa02 f103 	lsl.w	r1, r2, r3
 8000224:	4a07      	ldr	r2, [pc, #28]	; (8000244 <NVICEnable+0x40>)
 8000226:	79fb      	ldrb	r3, [r7, #7]
 8000228:	095b      	lsrs	r3, r3, #5
 800022a:	b2db      	uxtb	r3, r3
 800022c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000230:	e001      	b.n	8000236 <NVICEnable+0x32>
	}
	else
	{
		LocalErrorState =NOK;
 8000232:	2301      	movs	r3, #1
 8000234:	73fb      	strb	r3, [r7, #15]
	}
	return LocalErrorState;
 8000236:	7bfb      	ldrb	r3, [r7, #15]

}
 8000238:	4618      	mov	r0, r3
 800023a:	3714      	adds	r7, #20
 800023c:	46bd      	mov	sp, r7
 800023e:	bc80      	pop	{r7}
 8000240:	4770      	bx	lr
 8000242:	bf00      	nop
 8000244:	e000e100 	.word	0xe000e100

08000248 <NVICDisable>:
 * @post
 * @param  : IQR Number
 * @return : LocalErrorStatus
 */
uint8_t NVICDisable (IRQNUM_E IQR )
{
 8000248:	b480      	push	{r7}
 800024a:	b085      	sub	sp, #20
 800024c:	af00      	add	r7, sp, #0
 800024e:	4603      	mov	r3, r0
 8000250:	71fb      	strb	r3, [r7, #7]
	uint8_t LocalErrorState = OK;
 8000252:	2300      	movs	r3, #0
 8000254:	73fb      	strb	r3, [r7, #15]

	if(IQR<MAX_IRQ)
 8000256:	79fb      	ldrb	r3, [r7, #7]
 8000258:	2b5f      	cmp	r3, #95	; 0x5f
 800025a:	d80d      	bhi.n	8000278 <NVICDisable+0x30>
	{
		ATOMIC_SET_BIT(NVIC->NVIC_ICER[IQR/32],IQR%32);
 800025c:	79fb      	ldrb	r3, [r7, #7]
 800025e:	f003 031f 	and.w	r3, r3, #31
 8000262:	2201      	movs	r2, #1
 8000264:	fa02 f103 	lsl.w	r1, r2, r3
 8000268:	4a07      	ldr	r2, [pc, #28]	; (8000288 <NVICDisable+0x40>)
 800026a:	79fb      	ldrb	r3, [r7, #7]
 800026c:	095b      	lsrs	r3, r3, #5
 800026e:	b2db      	uxtb	r3, r3
 8000270:	3320      	adds	r3, #32
 8000272:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000276:	e001      	b.n	800027c <NVICDisable+0x34>
	}
	else
	{
		LocalErrorState =NOK;
 8000278:	2301      	movs	r3, #1
 800027a:	73fb      	strb	r3, [r7, #15]
	}
	return LocalErrorState;
 800027c:	7bfb      	ldrb	r3, [r7, #15]

}
 800027e:	4618      	mov	r0, r3
 8000280:	3714      	adds	r7, #20
 8000282:	46bd      	mov	sp, r7
 8000284:	bc80      	pop	{r7}
 8000286:	4770      	bx	lr
 8000288:	e000e100 	.word	0xe000e100

0800028c <NVIC_SetPendingFlag>:
 * @post
 * @param  : IQR Number
 * @return : LocalErrorStatus
 */
uint8_t NVIC_SetPendingFlag(IRQNUM_E IQR)
{
 800028c:	b480      	push	{r7}
 800028e:	b085      	sub	sp, #20
 8000290:	af00      	add	r7, sp, #0
 8000292:	4603      	mov	r3, r0
 8000294:	71fb      	strb	r3, [r7, #7]
	uint8_t LocalErrorState = OK;
 8000296:	2300      	movs	r3, #0
 8000298:	73fb      	strb	r3, [r7, #15]
	if(IQR<MAX_IRQ)
 800029a:	79fb      	ldrb	r3, [r7, #7]
 800029c:	2b5f      	cmp	r3, #95	; 0x5f
 800029e:	d80d      	bhi.n	80002bc <NVIC_SetPendingFlag+0x30>
	{
		ATOMIC_SET_BIT(NVIC->NVIC_ISPR[IQR/32],IQR%32);
 80002a0:	79fb      	ldrb	r3, [r7, #7]
 80002a2:	f003 031f 	and.w	r3, r3, #31
 80002a6:	2201      	movs	r2, #1
 80002a8:	fa02 f103 	lsl.w	r1, r2, r3
 80002ac:	4a07      	ldr	r2, [pc, #28]	; (80002cc <NVIC_SetPendingFlag+0x40>)
 80002ae:	79fb      	ldrb	r3, [r7, #7]
 80002b0:	095b      	lsrs	r3, r3, #5
 80002b2:	b2db      	uxtb	r3, r3
 80002b4:	3340      	adds	r3, #64	; 0x40
 80002b6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80002ba:	e001      	b.n	80002c0 <NVIC_SetPendingFlag+0x34>
	}
	else
	{
		LocalErrorState =NOK;
 80002bc:	2301      	movs	r3, #1
 80002be:	73fb      	strb	r3, [r7, #15]
	}
	return LocalErrorState;
 80002c0:	7bfb      	ldrb	r3, [r7, #15]


}
 80002c2:	4618      	mov	r0, r3
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	e000e100 	.word	0xe000e100

080002d0 <NVIC_ClearPendingFlag>:
 * @post
 * @param  : IQR Number
 * @return : LocalErrorStatus
 */
uint8_t NVIC_ClearPendingFlag(IRQNUM_E IQR)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b085      	sub	sp, #20
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	4603      	mov	r3, r0
 80002d8:	71fb      	strb	r3, [r7, #7]
	uint8_t LocalErrorState = OK;
 80002da:	2300      	movs	r3, #0
 80002dc:	73fb      	strb	r3, [r7, #15]

	if(IQR<MAX_IRQ)
 80002de:	79fb      	ldrb	r3, [r7, #7]
 80002e0:	2b5f      	cmp	r3, #95	; 0x5f
 80002e2:	d80d      	bhi.n	8000300 <NVIC_ClearPendingFlag+0x30>
	{
		ATOMIC_SET_BIT(NVIC->NVIC_ICPR[IQR/32],IQR%32);
 80002e4:	79fb      	ldrb	r3, [r7, #7]
 80002e6:	f003 031f 	and.w	r3, r3, #31
 80002ea:	2201      	movs	r2, #1
 80002ec:	fa02 f103 	lsl.w	r1, r2, r3
 80002f0:	4a07      	ldr	r2, [pc, #28]	; (8000310 <NVIC_ClearPendingFlag+0x40>)
 80002f2:	79fb      	ldrb	r3, [r7, #7]
 80002f4:	095b      	lsrs	r3, r3, #5
 80002f6:	b2db      	uxtb	r3, r3
 80002f8:	3360      	adds	r3, #96	; 0x60
 80002fa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80002fe:	e001      	b.n	8000304 <NVIC_ClearPendingFlag+0x34>
	}
	else
	{
		LocalErrorState =NOK;
 8000300:	2301      	movs	r3, #1
 8000302:	73fb      	strb	r3, [r7, #15]
	}


	return LocalErrorState;
 8000304:	7bfb      	ldrb	r3, [r7, #15]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3714      	adds	r7, #20
 800030a:	46bd      	mov	sp, r7
 800030c:	bc80      	pop	{r7}
 800030e:	4770      	bx	lr
 8000310:	e000e100 	.word	0xe000e100

08000314 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
    /* Loop forever */

	/*Test Drive*/

	NVICEnable(WWDG);
 8000318:	2000      	movs	r0, #0
 800031a:	f7ff ff73 	bl	8000204 <NVICEnable>


	NVIC_SetPendingFlag(WWDG);
 800031e:	2000      	movs	r0, #0
 8000320:	f7ff ffb4 	bl	800028c <NVIC_SetPendingFlag>


	NVICDisable(WWDG);
 8000324:	2000      	movs	r0, #0
 8000326:	f7ff ff8f 	bl	8000248 <NVICDisable>


	NVIC_ClearPendingFlag(WWDG);
 800032a:	2000      	movs	r0, #0
 800032c:	f7ff ffd0 	bl	80002d0 <NVIC_ClearPendingFlag>


	for(;;);
 8000330:	e7fe      	b.n	8000330 <main+0x1c>

08000332 <WWDG_IRQHandler>:
}

void WWDG_IRQHandler(void)
{
 8000332:	b580      	push	{r7, lr}
 8000334:	af00      	add	r7, sp, #0

	/* In WWDG_IRQHandler */
	/*Clear Pending flag After Handle Interrupt*/
	NVIC_ClearPendingFlag(WWDG);
 8000336:	2000      	movs	r0, #0
 8000338:	f7ff ffca 	bl	80002d0 <NVIC_ClearPendingFlag>

}
 800033c:	bf00      	nop
 800033e:	bd80      	pop	{r7, pc}

08000340 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000340:	480d      	ldr	r0, [pc, #52]	; (8000378 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000342:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000344:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000348:	480c      	ldr	r0, [pc, #48]	; (800037c <LoopForever+0x6>)
  ldr r1, =_edata
 800034a:	490d      	ldr	r1, [pc, #52]	; (8000380 <LoopForever+0xa>)
  ldr r2, =_sidata
 800034c:	4a0d      	ldr	r2, [pc, #52]	; (8000384 <LoopForever+0xe>)
  movs r3, #0
 800034e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000350:	e002      	b.n	8000358 <LoopCopyDataInit>

08000352 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000352:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000354:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000356:	3304      	adds	r3, #4

08000358 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000358:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800035a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800035c:	d3f9      	bcc.n	8000352 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800035e:	4a0a      	ldr	r2, [pc, #40]	; (8000388 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000360:	4c0a      	ldr	r4, [pc, #40]	; (800038c <LoopForever+0x16>)
  movs r3, #0
 8000362:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000364:	e001      	b.n	800036a <LoopFillZerobss>

08000366 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000366:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000368:	3204      	adds	r2, #4

0800036a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800036a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800036c:	d3fb      	bcc.n	8000366 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800036e:	f000 f811 	bl	8000394 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000372:	f7ff ffcf 	bl	8000314 <main>

08000376 <LoopForever>:

LoopForever:
  b LoopForever
 8000376:	e7fe      	b.n	8000376 <LoopForever>
  ldr   r0, =_estack
 8000378:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800037c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000380:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000384:	080003fc 	.word	0x080003fc
  ldr r2, =_sbss
 8000388:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800038c:	2000001c 	.word	0x2000001c

08000390 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000390:	e7fe      	b.n	8000390 <ADC_IRQHandler>
	...

08000394 <__libc_init_array>:
 8000394:	b570      	push	{r4, r5, r6, lr}
 8000396:	4d0d      	ldr	r5, [pc, #52]	; (80003cc <__libc_init_array+0x38>)
 8000398:	4c0d      	ldr	r4, [pc, #52]	; (80003d0 <__libc_init_array+0x3c>)
 800039a:	1b64      	subs	r4, r4, r5
 800039c:	10a4      	asrs	r4, r4, #2
 800039e:	2600      	movs	r6, #0
 80003a0:	42a6      	cmp	r6, r4
 80003a2:	d109      	bne.n	80003b8 <__libc_init_array+0x24>
 80003a4:	4d0b      	ldr	r5, [pc, #44]	; (80003d4 <__libc_init_array+0x40>)
 80003a6:	4c0c      	ldr	r4, [pc, #48]	; (80003d8 <__libc_init_array+0x44>)
 80003a8:	f000 f818 	bl	80003dc <_init>
 80003ac:	1b64      	subs	r4, r4, r5
 80003ae:	10a4      	asrs	r4, r4, #2
 80003b0:	2600      	movs	r6, #0
 80003b2:	42a6      	cmp	r6, r4
 80003b4:	d105      	bne.n	80003c2 <__libc_init_array+0x2e>
 80003b6:	bd70      	pop	{r4, r5, r6, pc}
 80003b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003bc:	4798      	blx	r3
 80003be:	3601      	adds	r6, #1
 80003c0:	e7ee      	b.n	80003a0 <__libc_init_array+0xc>
 80003c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c6:	4798      	blx	r3
 80003c8:	3601      	adds	r6, #1
 80003ca:	e7f2      	b.n	80003b2 <__libc_init_array+0x1e>
 80003cc:	080003f4 	.word	0x080003f4
 80003d0:	080003f4 	.word	0x080003f4
 80003d4:	080003f4 	.word	0x080003f4
 80003d8:	080003f8 	.word	0x080003f8

080003dc <_init>:
 80003dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003de:	bf00      	nop
 80003e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003e2:	bc08      	pop	{r3}
 80003e4:	469e      	mov	lr, r3
 80003e6:	4770      	bx	lr

080003e8 <_fini>:
 80003e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ea:	bf00      	nop
 80003ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ee:	bc08      	pop	{r3}
 80003f0:	469e      	mov	lr, r3
 80003f2:	4770      	bx	lr
