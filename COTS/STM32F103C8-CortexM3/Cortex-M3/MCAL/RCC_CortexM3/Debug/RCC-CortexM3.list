
RCC-CortexM3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000450  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000580  08000588  00010588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000580  08000580  00010588  2**0
                  CONTENTS
  4 .ARM          00000000  08000580  08000580  00010588  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000580  08000588  00010588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000580  08000580  00010580  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000584  08000584  00010584  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000588  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000588  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010588  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007da  00000000  00000000  000105b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000020c  00000000  00000000  00010d8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000090  00000000  00000000  00010f98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  00011028  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000145a  00000000  00000000  00011090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b9d  00000000  00000000  000124ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000080c5  00000000  00000000  00013087  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001b14c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000154  00000000  00000000  0001b19c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000568 	.word	0x08000568

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000568 	.word	0x08000568

08000170 <RCC_VoidSetClkStatues>:




uint8_t RCC_VoidSetClkStatues(Clktype_E clocktype , Status_E Status)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	460a      	mov	r2, r1
 800017a:	71fb      	strb	r3, [r7, #7]
 800017c:	4613      	mov	r3, r2
 800017e:	71bb      	strb	r3, [r7, #6]
	uint32_t Local_TimeOut=0;
 8000180:	2300      	movs	r3, #0
 8000182:	60fb      	str	r3, [r7, #12]
	uint8_t Localu8ErrorStatus = OK ;
 8000184:	2300      	movs	r3, #0
 8000186:	72fb      	strb	r3, [r7, #11]
	switch(clocktype)
 8000188:	79fb      	ldrb	r3, [r7, #7]
 800018a:	2b02      	cmp	r3, #2
 800018c:	d04f      	beq.n	800022e <RCC_VoidSetClkStatues+0xbe>
 800018e:	2b02      	cmp	r3, #2
 8000190:	dc72      	bgt.n	8000278 <RCC_VoidSetClkStatues+0x108>
 8000192:	2b00      	cmp	r3, #0
 8000194:	d026      	beq.n	80001e4 <RCC_VoidSetClkStatues+0x74>
 8000196:	2b01      	cmp	r3, #1
 8000198:	d16e      	bne.n	8000278 <RCC_VoidSetClkStatues+0x108>
	{
	case HSE :
		if(Status==CLK_ON)
 800019a:	79bb      	ldrb	r3, [r7, #6]
 800019c:	2b01      	cmp	r3, #1
 800019e:	d115      	bne.n	80001cc <RCC_VoidSetClkStatues+0x5c>
		{
			/*Enable HSE*/
			RCC->CR.BIT.HSEON=CLK_ON;
 80001a0:	4a3c      	ldr	r2, [pc, #240]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 80001a2:	7893      	ldrb	r3, [r2, #2]
 80001a4:	f043 0301 	orr.w	r3, r3, #1
 80001a8:	7093      	strb	r3, [r2, #2]
			/*Waitting until ready*/
			while((RCC->CR.BIT.HSERDY==0 )&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 80001aa:	e002      	b.n	80001b2 <RCC_VoidSetClkStatues+0x42>
			{
				Local_TimeOut++;
 80001ac:	68fb      	ldr	r3, [r7, #12]
 80001ae:	3301      	adds	r3, #1
 80001b0:	60fb      	str	r3, [r7, #12]
			while((RCC->CR.BIT.HSERDY==0 )&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 80001b2:	4b38      	ldr	r3, [pc, #224]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 80001b4:	789b      	ldrb	r3, [r3, #2]
 80001b6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80001ba:	b2db      	uxtb	r3, r3
 80001bc:	2b00      	cmp	r3, #0
 80001be:	d15e      	bne.n	800027e <RCC_VoidSetClkStatues+0x10e>
 80001c0:	68fb      	ldr	r3, [r7, #12]
 80001c2:	f241 3287 	movw	r2, #4999	; 0x1387
 80001c6:	4293      	cmp	r3, r2
 80001c8:	d9f0      	bls.n	80001ac <RCC_VoidSetClkStatues+0x3c>
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_VoidSetClkStatues,DET_clocktype);
		}

		;break;
 80001ca:	e058      	b.n	800027e <RCC_VoidSetClkStatues+0x10e>
		else if (Status==CLK_OFF)
 80001cc:	79bb      	ldrb	r3, [r7, #6]
 80001ce:	2b00      	cmp	r3, #0
 80001d0:	d105      	bne.n	80001de <RCC_VoidSetClkStatues+0x6e>
			RCC->CR.BIT.HSEON=CLK_OFF;
 80001d2:	4a30      	ldr	r2, [pc, #192]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 80001d4:	7893      	ldrb	r3, [r2, #2]
 80001d6:	f36f 0300 	bfc	r3, #0, #1
 80001da:	7093      	strb	r3, [r2, #2]
		;break;
 80001dc:	e04f      	b.n	800027e <RCC_VoidSetClkStatues+0x10e>
			Localu8ErrorStatus=NOK;
 80001de:	2301      	movs	r3, #1
 80001e0:	72fb      	strb	r3, [r7, #11]
		;break;
 80001e2:	e04c      	b.n	800027e <RCC_VoidSetClkStatues+0x10e>
	case HSI :
		if(Status==CLK_ON)
 80001e4:	79bb      	ldrb	r3, [r7, #6]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d115      	bne.n	8000216 <RCC_VoidSetClkStatues+0xa6>
		{
			/*Enable HSI*/
			RCC->CR.BIT.HSION=CLK_ON;
 80001ea:	4a2a      	ldr	r2, [pc, #168]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 80001ec:	7813      	ldrb	r3, [r2, #0]
 80001ee:	f043 0301 	orr.w	r3, r3, #1
 80001f2:	7013      	strb	r3, [r2, #0]
			/*Waitting until ready*/
			while((RCC->CR.BIT.HSIRDY==0)&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 80001f4:	e002      	b.n	80001fc <RCC_VoidSetClkStatues+0x8c>
			{
				Local_TimeOut++ ;
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	3301      	adds	r3, #1
 80001fa:	60fb      	str	r3, [r7, #12]
			while((RCC->CR.BIT.HSIRDY==0)&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 80001fc:	4b25      	ldr	r3, [pc, #148]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 80001fe:	781b      	ldrb	r3, [r3, #0]
 8000200:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000204:	b2db      	uxtb	r3, r3
 8000206:	2b00      	cmp	r3, #0
 8000208:	d13b      	bne.n	8000282 <RCC_VoidSetClkStatues+0x112>
 800020a:	68fb      	ldr	r3, [r7, #12]
 800020c:	f241 3287 	movw	r2, #4999	; 0x1387
 8000210:	4293      	cmp	r3, r2
 8000212:	d9f0      	bls.n	80001f6 <RCC_VoidSetClkStatues+0x86>
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_VoidSetClkStatues,DET_clocktype);
		}
		;break;
 8000214:	e035      	b.n	8000282 <RCC_VoidSetClkStatues+0x112>
		else if (Status==CLK_OFF)
 8000216:	79bb      	ldrb	r3, [r7, #6]
 8000218:	2b00      	cmp	r3, #0
 800021a:	d105      	bne.n	8000228 <RCC_VoidSetClkStatues+0xb8>
			RCC->CR.BIT.HSION=CLK_OFF;
 800021c:	4a1d      	ldr	r2, [pc, #116]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 800021e:	7813      	ldrb	r3, [r2, #0]
 8000220:	f36f 0300 	bfc	r3, #0, #1
 8000224:	7013      	strb	r3, [r2, #0]
		;break;
 8000226:	e02c      	b.n	8000282 <RCC_VoidSetClkStatues+0x112>
			Localu8ErrorStatus=NOK;
 8000228:	2301      	movs	r3, #1
 800022a:	72fb      	strb	r3, [r7, #11]
		;break;
 800022c:	e029      	b.n	8000282 <RCC_VoidSetClkStatues+0x112>
	case PLL :
		if(Status==CLK_ON)
 800022e:	79bb      	ldrb	r3, [r7, #6]
 8000230:	2b01      	cmp	r3, #1
 8000232:	d115      	bne.n	8000260 <RCC_VoidSetClkStatues+0xf0>
		{
			/*Enable PLL*/
			RCC->CR.BIT.PLL_ON=CLK_ON;
 8000234:	4a17      	ldr	r2, [pc, #92]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 8000236:	78d3      	ldrb	r3, [r2, #3]
 8000238:	f043 0301 	orr.w	r3, r3, #1
 800023c:	70d3      	strb	r3, [r2, #3]
			/*Waitting until ready*/
			while((RCC->CR.BIT.PLL_RDY==0)&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 800023e:	e002      	b.n	8000246 <RCC_VoidSetClkStatues+0xd6>
			{
				Local_TimeOut++;
 8000240:	68fb      	ldr	r3, [r7, #12]
 8000242:	3301      	adds	r3, #1
 8000244:	60fb      	str	r3, [r7, #12]
			while((RCC->CR.BIT.PLL_RDY==0)&& (Local_TimeOut< MAXTIMEOUT_VALUE))
 8000246:	4b13      	ldr	r3, [pc, #76]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 8000248:	78db      	ldrb	r3, [r3, #3]
 800024a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800024e:	b2db      	uxtb	r3, r3
 8000250:	2b00      	cmp	r3, #0
 8000252:	d118      	bne.n	8000286 <RCC_VoidSetClkStatues+0x116>
 8000254:	68fb      	ldr	r3, [r7, #12]
 8000256:	f241 3287 	movw	r2, #4999	; 0x1387
 800025a:	4293      	cmp	r3, r2
 800025c:	d9f0      	bls.n	8000240 <RCC_VoidSetClkStatues+0xd0>
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_VoidSetClkStatues,DET_clocktype);
		}
		;break;
 800025e:	e012      	b.n	8000286 <RCC_VoidSetClkStatues+0x116>
		else if (Status==CLK_OFF)
 8000260:	79bb      	ldrb	r3, [r7, #6]
 8000262:	2b00      	cmp	r3, #0
 8000264:	d105      	bne.n	8000272 <RCC_VoidSetClkStatues+0x102>
			RCC->CR.BIT.PLL_ON=CLK_OFF;
 8000266:	4a0b      	ldr	r2, [pc, #44]	; (8000294 <RCC_VoidSetClkStatues+0x124>)
 8000268:	78d3      	ldrb	r3, [r2, #3]
 800026a:	f36f 0300 	bfc	r3, #0, #1
 800026e:	70d3      	strb	r3, [r2, #3]
		;break;
 8000270:	e009      	b.n	8000286 <RCC_VoidSetClkStatues+0x116>
			Localu8ErrorStatus=NOK;
 8000272:	2301      	movs	r3, #1
 8000274:	72fb      	strb	r3, [r7, #11]
		;break;
 8000276:	e006      	b.n	8000286 <RCC_VoidSetClkStatues+0x116>
	default:
		Localu8ErrorStatus=NOK;
 8000278:	2301      	movs	r3, #1
 800027a:	72fb      	strb	r3, [r7, #11]
		//DET_ReportError(DET_RCCModuleID,DET_RCC_VoidSetClkStatues,DET_clocktype);
		break;
 800027c:	e004      	b.n	8000288 <RCC_VoidSetClkStatues+0x118>
		;break;
 800027e:	bf00      	nop
 8000280:	e002      	b.n	8000288 <RCC_VoidSetClkStatues+0x118>
		;break;
 8000282:	bf00      	nop
 8000284:	e000      	b.n	8000288 <RCC_VoidSetClkStatues+0x118>
		;break;
 8000286:	bf00      	nop
	}
	return Localu8ErrorStatus ;
 8000288:	7afb      	ldrb	r3, [r7, #11]

}
 800028a:	4618      	mov	r0, r3
 800028c:	3714      	adds	r7, #20
 800028e:	46bd      	mov	sp, r7
 8000290:	bc80      	pop	{r7}
 8000292:	4770      	bx	lr
 8000294:	40021000 	.word	0x40021000

08000298 <RCC_VoidSetSysClk>:

uint8_t RCC_VoidSetSysClk(Clktype_E clocktype)
{
 8000298:	b480      	push	{r7}
 800029a:	b085      	sub	sp, #20
 800029c:	af00      	add	r7, sp, #0
 800029e:	4603      	mov	r3, r0
 80002a0:	71fb      	strb	r3, [r7, #7]
	uint8_t Localu8ErrorStatus = OK ;
 80002a2:	2300      	movs	r3, #0
 80002a4:	73fb      	strb	r3, [r7, #15]
	if(clocktype < MAX_Clktype)
 80002a6:	79fb      	ldrb	r3, [r7, #7]
 80002a8:	2b02      	cmp	r3, #2
 80002aa:	d81a      	bhi.n	80002e2 <RCC_VoidSetSysClk+0x4a>
	{
		/*CLEAR BITS*/
		RCC->CFGR.Bit.SW &=~(SW_MASK);
 80002ac:	4b11      	ldr	r3, [pc, #68]	; (80002f4 <RCC_VoidSetSysClk+0x5c>)
 80002ae:	791b      	ldrb	r3, [r3, #4]
 80002b0:	f3c3 0301 	ubfx	r3, r3, #0, #2
 80002b4:	4a0f      	ldr	r2, [pc, #60]	; (80002f4 <RCC_VoidSetSysClk+0x5c>)
 80002b6:	7913      	ldrb	r3, [r2, #4]
 80002b8:	f36f 0301 	bfc	r3, #0, #2
 80002bc:	7113      	strb	r3, [r2, #4]
		RCC->CFGR.Bit.SW |= clocktype;
 80002be:	4b0d      	ldr	r3, [pc, #52]	; (80002f4 <RCC_VoidSetSysClk+0x5c>)
 80002c0:	791b      	ldrb	r3, [r3, #4]
 80002c2:	f3c3 0301 	ubfx	r3, r3, #0, #2
 80002c6:	b2db      	uxtb	r3, r3
 80002c8:	461a      	mov	r2, r3
 80002ca:	79fb      	ldrb	r3, [r7, #7]
 80002cc:	4313      	orrs	r3, r2
 80002ce:	b2db      	uxtb	r3, r3
 80002d0:	4a08      	ldr	r2, [pc, #32]	; (80002f4 <RCC_VoidSetSysClk+0x5c>)
 80002d2:	f003 0303 	and.w	r3, r3, #3
 80002d6:	b2d9      	uxtb	r1, r3
 80002d8:	7913      	ldrb	r3, [r2, #4]
 80002da:	f361 0301 	bfi	r3, r1, #0, #2
 80002de:	7113      	strb	r3, [r2, #4]
 80002e0:	e001      	b.n	80002e6 <RCC_VoidSetSysClk+0x4e>
	}
	else
	{
		Localu8ErrorStatus=NOK;
 80002e2:	2301      	movs	r3, #1
 80002e4:	73fb      	strb	r3, [r7, #15]
//		DET_ReportError(DET_RCCModuleID,DET_RCC_VoidSetSysClk,DET_clocktype);
	}
	return Localu8ErrorStatus ;
 80002e6:	7bfb      	ldrb	r3, [r7, #15]

}
 80002e8:	4618      	mov	r0, r3
 80002ea:	3714      	adds	r7, #20
 80002ec:	46bd      	mov	sp, r7
 80002ee:	bc80      	pop	{r7}
 80002f0:	4770      	bx	lr
 80002f2:	bf00      	nop
 80002f4:	40021000 	.word	0x40021000

080002f8 <RCC_VoidHSEConfig>:

uint8_t RCC_VoidHSEConfig(HSE_CONFIG_E HSEConfig)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b084      	sub	sp, #16
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	4603      	mov	r3, r0
 8000300:	71fb      	strb	r3, [r7, #7]
	uint8_t Localu8ErrorStatus=OK;
 8000302:	2300      	movs	r3, #0
 8000304:	73fb      	strb	r3, [r7, #15]
	/*Disable HSE*/
	RCC_VoidSetSysClk(HSI);
 8000306:	2000      	movs	r0, #0
 8000308:	f7ff ffc6 	bl	8000298 <RCC_VoidSetSysClk>
	RCC->CR.BIT.HSEON=0;
 800030c:	4a11      	ldr	r2, [pc, #68]	; (8000354 <RCC_VoidHSEConfig+0x5c>)
 800030e:	7893      	ldrb	r3, [r2, #2]
 8000310:	f36f 0300 	bfc	r3, #0, #1
 8000314:	7093      	strb	r3, [r2, #2]

	/*HSE divider for PLL entry */
	RCC->CFGR.Bit.PLLXTPRE &=~(PLL_MASK);
 8000316:	4b0f      	ldr	r3, [pc, #60]	; (8000354 <RCC_VoidHSEConfig+0x5c>)
 8000318:	799b      	ldrb	r3, [r3, #6]
 800031a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800031e:	4a0d      	ldr	r2, [pc, #52]	; (8000354 <RCC_VoidHSEConfig+0x5c>)
 8000320:	7993      	ldrb	r3, [r2, #6]
 8000322:	f36f 0341 	bfc	r3, #1, #1
 8000326:	7193      	strb	r3, [r2, #6]
	RCC->CFGR.Bit.PLLXTPRE |=HSEConfig;
 8000328:	4b0a      	ldr	r3, [pc, #40]	; (8000354 <RCC_VoidHSEConfig+0x5c>)
 800032a:	799b      	ldrb	r3, [r3, #6]
 800032c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000330:	b2db      	uxtb	r3, r3
 8000332:	461a      	mov	r2, r3
 8000334:	79fb      	ldrb	r3, [r7, #7]
 8000336:	4313      	orrs	r3, r2
 8000338:	b2db      	uxtb	r3, r3
 800033a:	4a06      	ldr	r2, [pc, #24]	; (8000354 <RCC_VoidHSEConfig+0x5c>)
 800033c:	f003 0301 	and.w	r3, r3, #1
 8000340:	b2d9      	uxtb	r1, r3
 8000342:	7993      	ldrb	r3, [r2, #6]
 8000344:	f361 0341 	bfi	r3, r1, #1, #1
 8000348:	7193      	strb	r3, [r2, #6]

	return Localu8ErrorStatus ;
 800034a:	7bfb      	ldrb	r3, [r7, #15]
}
 800034c:	4618      	mov	r0, r3
 800034e:	3710      	adds	r7, #16
 8000350:	46bd      	mov	sp, r7
 8000352:	bd80      	pop	{r7, pc}
 8000354:	40021000 	.word	0x40021000

08000358 <RCC_voidEnablePeripheralBus>:


uint8_t RCC_voidEnablePeripheralBus(BusId_E uint8_BusId,uint8_t Uint8_Peripheral_ID)
{
 8000358:	b480      	push	{r7}
 800035a:	b085      	sub	sp, #20
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	460a      	mov	r2, r1
 8000362:	71fb      	strb	r3, [r7, #7]
 8000364:	4613      	mov	r3, r2
 8000366:	71bb      	strb	r3, [r7, #6]
	uint8_t Localu8ErrorStatus=OK;
 8000368:	2300      	movs	r3, #0
 800036a:	73fb      	strb	r3, [r7, #15]
	switch(uint8_BusId)
 800036c:	79fb      	ldrb	r3, [r7, #7]
 800036e:	2b02      	cmp	r3, #2
 8000370:	d028      	beq.n	80003c4 <RCC_voidEnablePeripheralBus+0x6c>
 8000372:	2b02      	cmp	r3, #2
 8000374:	dc37      	bgt.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>
 8000376:	2b00      	cmp	r3, #0
 8000378:	d002      	beq.n	8000380 <RCC_voidEnablePeripheralBus+0x28>
 800037a:	2b01      	cmp	r3, #1
 800037c:	d011      	beq.n	80003a2 <RCC_voidEnablePeripheralBus+0x4a>
 800037e:	e032      	b.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>
	{
	case AHB :
		if (uint8_BusId <= MAX_AHB_ID)
 8000380:	79fb      	ldrb	r3, [r7, #7]
 8000382:	2b0a      	cmp	r3, #10
 8000384:	d80a      	bhi.n	800039c <RCC_voidEnablePeripheralBus+0x44>
		{
			SET_BIT(RCC->AHBENR,Uint8_Peripheral_ID);
 8000386:	4b1b      	ldr	r3, [pc, #108]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 8000388:	695b      	ldr	r3, [r3, #20]
 800038a:	79ba      	ldrb	r2, [r7, #6]
 800038c:	2101      	movs	r1, #1
 800038e:	fa01 f202 	lsl.w	r2, r1, r2
 8000392:	4611      	mov	r1, r2
 8000394:	4a17      	ldr	r2, [pc, #92]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 8000396:	430b      	orrs	r3, r1
 8000398:	6153      	str	r3, [r2, #20]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_AHB_ID);
		}
		break;
 800039a:	e024      	b.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>
			Localu8ErrorStatus=NOK;
 800039c:	2301      	movs	r3, #1
 800039e:	73fb      	strb	r3, [r7, #15]
		break;
 80003a0:	e021      	b.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>

	case APB1 :
		if (uint8_BusId <= MAX_APB1_ID)
 80003a2:	79fb      	ldrb	r3, [r7, #7]
 80003a4:	2b1d      	cmp	r3, #29
 80003a6:	d80a      	bhi.n	80003be <RCC_voidEnablePeripheralBus+0x66>
		{
			SET_BIT(RCC->APB1ENR,Uint8_Peripheral_ID);
 80003a8:	4b12      	ldr	r3, [pc, #72]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 80003aa:	69db      	ldr	r3, [r3, #28]
 80003ac:	79ba      	ldrb	r2, [r7, #6]
 80003ae:	2101      	movs	r1, #1
 80003b0:	fa01 f202 	lsl.w	r2, r1, r2
 80003b4:	4611      	mov	r1, r2
 80003b6:	4a0f      	ldr	r2, [pc, #60]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 80003b8:	430b      	orrs	r3, r1
 80003ba:	61d3      	str	r3, [r2, #28]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_APB1_ID);
		}
		break;
 80003bc:	e013      	b.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>
			Localu8ErrorStatus=NOK;
 80003be:	2301      	movs	r3, #1
 80003c0:	73fb      	strb	r3, [r7, #15]
		break;
 80003c2:	e010      	b.n	80003e6 <RCC_voidEnablePeripheralBus+0x8e>

	case APB2 :
		if (uint8_BusId <= MAX_APB2_ID)
 80003c4:	79fb      	ldrb	r3, [r7, #7]
 80003c6:	2b15      	cmp	r3, #21
 80003c8:	d80a      	bhi.n	80003e0 <RCC_voidEnablePeripheralBus+0x88>
		{
			SET_BIT(RCC->APB2ENR,Uint8_Peripheral_ID);
 80003ca:	4b0a      	ldr	r3, [pc, #40]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 80003cc:	699b      	ldr	r3, [r3, #24]
 80003ce:	79ba      	ldrb	r2, [r7, #6]
 80003d0:	2101      	movs	r1, #1
 80003d2:	fa01 f202 	lsl.w	r2, r1, r2
 80003d6:	4611      	mov	r1, r2
 80003d8:	4a06      	ldr	r2, [pc, #24]	; (80003f4 <RCC_voidEnablePeripheralBus+0x9c>)
 80003da:	430b      	orrs	r3, r1
 80003dc:	6193      	str	r3, [r2, #24]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_APB2_ID);
		}
		break;
 80003de:	e001      	b.n	80003e4 <RCC_voidEnablePeripheralBus+0x8c>
			Localu8ErrorStatus=NOK;
 80003e0:	2301      	movs	r3, #1
 80003e2:	73fb      	strb	r3, [r7, #15]
		break;
 80003e4:	bf00      	nop

	}
	return Localu8ErrorStatus ;
 80003e6:	7bfb      	ldrb	r3, [r7, #15]

}
 80003e8:	4618      	mov	r0, r3
 80003ea:	3714      	adds	r7, #20
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bc80      	pop	{r7}
 80003f0:	4770      	bx	lr
 80003f2:	bf00      	nop
 80003f4:	40021000 	.word	0x40021000

080003f8 <RCC_voidDisablePeripheralBus>:

uint8_t RCC_voidDisablePeripheralBus(BusId_E uint8_BusId,uint8_t Uint8_Peripheral_ID)
{
 80003f8:	b480      	push	{r7}
 80003fa:	b085      	sub	sp, #20
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	4603      	mov	r3, r0
 8000400:	460a      	mov	r2, r1
 8000402:	71fb      	strb	r3, [r7, #7]
 8000404:	4613      	mov	r3, r2
 8000406:	71bb      	strb	r3, [r7, #6]
	uint8_t Localu8ErrorStatus = OK;
 8000408:	2300      	movs	r3, #0
 800040a:	73fb      	strb	r3, [r7, #15]
	switch(uint8_BusId)
 800040c:	79fb      	ldrb	r3, [r7, #7]
 800040e:	2b02      	cmp	r3, #2
 8000410:	d02a      	beq.n	8000468 <RCC_voidDisablePeripheralBus+0x70>
 8000412:	2b02      	cmp	r3, #2
 8000414:	dc3a      	bgt.n	800048c <RCC_voidDisablePeripheralBus+0x94>
 8000416:	2b00      	cmp	r3, #0
 8000418:	d002      	beq.n	8000420 <RCC_voidDisablePeripheralBus+0x28>
 800041a:	2b01      	cmp	r3, #1
 800041c:	d012      	beq.n	8000444 <RCC_voidDisablePeripheralBus+0x4c>
 800041e:	e035      	b.n	800048c <RCC_voidDisablePeripheralBus+0x94>
	{
	case AHB :
		if (uint8_BusId <= MAX_AHB_ID)
 8000420:	79fb      	ldrb	r3, [r7, #7]
 8000422:	2b0a      	cmp	r3, #10
 8000424:	d80b      	bhi.n	800043e <RCC_voidDisablePeripheralBus+0x46>
		{
			CLR_BIT(RCC->AHBENR, Uint8_Peripheral_ID);
 8000426:	4b1c      	ldr	r3, [pc, #112]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 8000428:	695b      	ldr	r3, [r3, #20]
 800042a:	79ba      	ldrb	r2, [r7, #6]
 800042c:	2101      	movs	r1, #1
 800042e:	fa01 f202 	lsl.w	r2, r1, r2
 8000432:	43d2      	mvns	r2, r2
 8000434:	4611      	mov	r1, r2
 8000436:	4a18      	ldr	r2, [pc, #96]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 8000438:	400b      	ands	r3, r1
 800043a:	6153      	str	r3, [r2, #20]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_AHB_ID);
		}
		break;
 800043c:	e026      	b.n	800048c <RCC_voidDisablePeripheralBus+0x94>
			Localu8ErrorStatus=NOK;
 800043e:	2301      	movs	r3, #1
 8000440:	73fb      	strb	r3, [r7, #15]
		break;
 8000442:	e023      	b.n	800048c <RCC_voidDisablePeripheralBus+0x94>

	case APB1 :
		if (uint8_BusId <= MAX_APB1_ID)
 8000444:	79fb      	ldrb	r3, [r7, #7]
 8000446:	2b1d      	cmp	r3, #29
 8000448:	d80b      	bhi.n	8000462 <RCC_voidDisablePeripheralBus+0x6a>
		{
			CLR_BIT(RCC->APB1ENR,Uint8_Peripheral_ID);
 800044a:	4b13      	ldr	r3, [pc, #76]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 800044c:	69db      	ldr	r3, [r3, #28]
 800044e:	79ba      	ldrb	r2, [r7, #6]
 8000450:	2101      	movs	r1, #1
 8000452:	fa01 f202 	lsl.w	r2, r1, r2
 8000456:	43d2      	mvns	r2, r2
 8000458:	4611      	mov	r1, r2
 800045a:	4a0f      	ldr	r2, [pc, #60]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 800045c:	400b      	ands	r3, r1
 800045e:	61d3      	str	r3, [r2, #28]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_APB1_ID);
		}
		break;
 8000460:	e014      	b.n	800048c <RCC_voidDisablePeripheralBus+0x94>
			Localu8ErrorStatus=NOK;
 8000462:	2301      	movs	r3, #1
 8000464:	73fb      	strb	r3, [r7, #15]
		break;
 8000466:	e011      	b.n	800048c <RCC_voidDisablePeripheralBus+0x94>

	case APB2 :
		if (uint8_BusId <= MAX_APB2_ID)
 8000468:	79fb      	ldrb	r3, [r7, #7]
 800046a:	2b15      	cmp	r3, #21
 800046c:	d80b      	bhi.n	8000486 <RCC_voidDisablePeripheralBus+0x8e>
		{
			CLR_BIT(RCC->APB2ENR,Uint8_Peripheral_ID);
 800046e:	4b0a      	ldr	r3, [pc, #40]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 8000470:	699b      	ldr	r3, [r3, #24]
 8000472:	79ba      	ldrb	r2, [r7, #6]
 8000474:	2101      	movs	r1, #1
 8000476:	fa01 f202 	lsl.w	r2, r1, r2
 800047a:	43d2      	mvns	r2, r2
 800047c:	4611      	mov	r1, r2
 800047e:	4a06      	ldr	r2, [pc, #24]	; (8000498 <RCC_voidDisablePeripheralBus+0xa0>)
 8000480:	400b      	ands	r3, r1
 8000482:	6193      	str	r3, [r2, #24]
		else
		{
			Localu8ErrorStatus=NOK;
//			DET_ReportError(DET_RCCModuleID,DET_RCC_voidEnablePeripheralBus,DET_MAX_APB2_ID);
		}
		break;
 8000484:	e001      	b.n	800048a <RCC_voidDisablePeripheralBus+0x92>
			Localu8ErrorStatus=NOK;
 8000486:	2301      	movs	r3, #1
 8000488:	73fb      	strb	r3, [r7, #15]
		break;
 800048a:	bf00      	nop

	}
	return Localu8ErrorStatus ;
 800048c:	7bfb      	ldrb	r3, [r7, #15]

}
 800048e:	4618      	mov	r0, r3
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	bc80      	pop	{r7}
 8000496:	4770      	bx	lr
 8000498:	40021000 	.word	0x40021000

0800049c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800049c:	b580      	push	{r7, lr}
 800049e:	af00      	add	r7, sp, #0
	/*TEST DRIVE*/

	RCC_VoidSetClkStatues(HSI, CLK_ON);
 80004a0:	2101      	movs	r1, #1
 80004a2:	2000      	movs	r0, #0
 80004a4:	f7ff fe64 	bl	8000170 <RCC_VoidSetClkStatues>

	RCC_VoidSetSysClk(HSI);
 80004a8:	2000      	movs	r0, #0
 80004aa:	f7ff fef5 	bl	8000298 <RCC_VoidSetSysClk>

	RCC_VoidSetSysClk(HSE);
 80004ae:	2001      	movs	r0, #1
 80004b0:	f7ff fef2 	bl	8000298 <RCC_VoidSetSysClk>

	RCC_voidEnablePeripheralBus(APB2, IOPCEN);
 80004b4:	2104      	movs	r1, #4
 80004b6:	2002      	movs	r0, #2
 80004b8:	f7ff ff4e 	bl	8000358 <RCC_voidEnablePeripheralBus>

	RCC_voidDisablePeripheralBus(APB2, IOPCEN);
 80004bc:	2104      	movs	r1, #4
 80004be:	2002      	movs	r0, #2
 80004c0:	f7ff ff9a 	bl	80003f8 <RCC_voidDisablePeripheralBus>

	RCC_VoidHSEConfig(DIV_1);
 80004c4:	2000      	movs	r0, #0
 80004c6:	f7ff ff17 	bl	80002f8 <RCC_VoidHSEConfig>



    /* Loop forever */
	for(;;);
 80004ca:	e7fe      	b.n	80004ca <main+0x2e>

080004cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004cc:	480d      	ldr	r0, [pc, #52]	; (8000504 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	; (8000508 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	; (800050c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	; (8000510 <LoopForever+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	; (8000518 <LoopForever+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fa:	f000 f811 	bl	8000520 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fe:	f7ff ffcd 	bl	800049c <main>

08000502 <LoopForever>:

LoopForever:
    b LoopForever
 8000502:	e7fe      	b.n	8000502 <LoopForever>
  ldr   r0, =_estack
 8000504:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000510:	08000588 	.word	0x08000588
  ldr r2, =_sbss
 8000514:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000518:	2000001c 	.word	0x2000001c

0800051c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC1_2_IRQHandler>
	...

08000520 <__libc_init_array>:
 8000520:	b570      	push	{r4, r5, r6, lr}
 8000522:	2600      	movs	r6, #0
 8000524:	4d0c      	ldr	r5, [pc, #48]	; (8000558 <__libc_init_array+0x38>)
 8000526:	4c0d      	ldr	r4, [pc, #52]	; (800055c <__libc_init_array+0x3c>)
 8000528:	1b64      	subs	r4, r4, r5
 800052a:	10a4      	asrs	r4, r4, #2
 800052c:	42a6      	cmp	r6, r4
 800052e:	d109      	bne.n	8000544 <__libc_init_array+0x24>
 8000530:	f000 f81a 	bl	8000568 <_init>
 8000534:	2600      	movs	r6, #0
 8000536:	4d0a      	ldr	r5, [pc, #40]	; (8000560 <__libc_init_array+0x40>)
 8000538:	4c0a      	ldr	r4, [pc, #40]	; (8000564 <__libc_init_array+0x44>)
 800053a:	1b64      	subs	r4, r4, r5
 800053c:	10a4      	asrs	r4, r4, #2
 800053e:	42a6      	cmp	r6, r4
 8000540:	d105      	bne.n	800054e <__libc_init_array+0x2e>
 8000542:	bd70      	pop	{r4, r5, r6, pc}
 8000544:	f855 3b04 	ldr.w	r3, [r5], #4
 8000548:	4798      	blx	r3
 800054a:	3601      	adds	r6, #1
 800054c:	e7ee      	b.n	800052c <__libc_init_array+0xc>
 800054e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000552:	4798      	blx	r3
 8000554:	3601      	adds	r6, #1
 8000556:	e7f2      	b.n	800053e <__libc_init_array+0x1e>
 8000558:	08000580 	.word	0x08000580
 800055c:	08000580 	.word	0x08000580
 8000560:	08000580 	.word	0x08000580
 8000564:	08000584 	.word	0x08000584

08000568 <_init>:
 8000568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800056a:	bf00      	nop
 800056c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800056e:	bc08      	pop	{r3}
 8000570:	469e      	mov	lr, r3
 8000572:	4770      	bx	lr

08000574 <_fini>:
 8000574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000576:	bf00      	nop
 8000578:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800057a:	bc08      	pop	{r3}
 800057c:	469e      	mov	lr, r3
 800057e:	4770      	bx	lr
